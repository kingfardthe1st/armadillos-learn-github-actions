name: Armadillos | Learn Github Actions
run-name: ${{ github.actor }} is testing out GitHub Actions ðŸš€
on: [push]
jobs:
  provision-infrax-dev:
    environment: dev
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      TF_VAR_resource_group_name: ${{ vars.RESOURCE_GROUP_NAME }}
      TF_VAR_resource_base_name: ${{ vars.RESOURCE_BASE_NAME }}
      TF_VAR_resource_suffix: ${{ vars.RESOURCE_SUFFIX }}
      BACKEND_CONFIG_FILE: "./backend.conf"
    runs-on: ubuntu-latest

    defaults:
      run:         
        working-directory: "./infrastructure"

    steps:
      - uses: actions/checkout@v3
      - uses: hashicorp/setup-terraform@v2
      # - name: 'Login via Azure CLI'
      #   uses: Azure/login@v1
      #   with:
      #     creds: ${{ secrets.AZURE_CREDENTIALS }}
      #     enable-AzPSSession: true
      - name: setup-pre-requisite-resources
        shell: bash
        run: |
          az login --service-principal -u $ARM_CLIENT_ID -p $ARM_CLIENT_SECRET --tenant $ARM_TENANT_ID
          
      - name: "Terraform Format"
        id: fmt
        run: terraform fmt -check

      - name: "Terraform Init"
        id: init
        run: terraform init -backend-config=$BACKEND_CONFIG_FILE

      - name: "Terraform Validate"
        id: validate
        run: terraform validate

      - name: "Terraform Plan"
        id: plan
        run: terraform plan

      - name: "Terraform Apply"
        id: apply
        run: terraform apply -auto-approve 

  build-and-deploy-dev:
    needs: provision-infrax-dev
    uses: "./.github/workflows/build-deploy.yaml"
    with:
      environment: dev
      dotnet_version: "6.0.x"
      functionapp_package_path: "./LearnGitHubActions"
    secrets:
      azure_rbac_credentials: ${{ secrets.AZURE_CREDENTIALS }}




